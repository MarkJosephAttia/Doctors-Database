<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MapsBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
</root>